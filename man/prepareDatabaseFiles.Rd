% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepareDatabaseFiles.R
\name{prepareDatabaseFiles}
\alias{prepareDatabaseFiles}
\title{Prepare the Gesel database}
\usage{
prepareDatabaseFiles(
  species,
  collections,
  set.info,
  set.membership,
  num.genes,
  path = "."
)
}
\arguments{
\item{species}{String specifying the species in the form of its NCBI taxonomy ID.}

\item{collections}{Data frame of information about each gene set collection, where each row corresponds to a collection.
This data frame should contain the same columns as that returned by \code{\link{fetchAllCollections}}.}

\item{set.info}{Data frame of information about each gene set, where each row corresponds to a set. 
This data frame should contain the same columns as that returned by \code{\link{fetchAllSets}}.}

\item{set.membership}{List of integer vectors, where each vector corresponds to a gene set and contains the indices of its constituent genes.
All gene indices should be positive and no greater than \code{num.genes}.}

\item{num.genes}{Integer scalar specifying the total number of genes available for this species.}

\item{path}{String containing the path to a directory in which to create the database files.}
}
\value{
Several files are produced at \code{path} with the \code{<species>_} prefix.
These can be made available for download with \code{\link{downloadDatabaseFile}}.
}
\description{
Prepare Gesel database files from various pieces of gene set information.
}
\examples{
# Mocking up some information.
collections <- data.frame(
    title=c("FOO", "BAR"),
    description=c("I am a foo", "I am a bar"),
    maintainer=c("Aaron", "Aaron"),
    source=c("https://foo", "https://bar"),
    start=c(1L, 21L),
    size=c(20L, 50L)
)

set.info <- data.frame(
    name=c(
        sprintf("FOO_\%i", seq_len(20)),
        sprintf("BAR_\%i", seq_len(50))
    ),
    description=c(
        sprintf("this is FOO \%i", seq_len(20)),
        sprintf("this is BAR \%i", seq_len(50))
    ),
    collection=rep(1:2, c(20L, 50L))
)

# Mocking up the gene sets.
num.genes <- 10000
set.membership <- split(
    sample(num.genes, 5000, replace=TRUE),
    factor(
        sample(nrow(set.info), 5000, replace=TRUE),
        seq_len(nrow(set.info))
    )
)
set.info$size <- lengths(set.membership)

# Now making the database files.
output <- tempfile()
dir.create(output)
prepareDatabaseFiles(
    "9606",
    collections, 
    set.info, 
    set.membership,
    num.genes,
    output
)

# We can then read directly from them:
head(fetchAllSets(
    "9606",
    fetch=function(x) {
        file.path(output, x) 
    }
))

}
\author{
Aaron Lun
}
